{"name":"csv2psql","body":"To try it out:\r\n\r\n\t% python setup.py install\r\n\t% csv2psql --schema=public --key=student_id,class_id example/enrolled.csv > enrolled.sql\r\n\t% psql -f enrolled.sql\r\n\r\nConverts a CSV file into a PostgreSQL table.\r\n\r\n\tUsage: csv2psql.py [options] ( input.csv | - ) [tablename] | psql\r\n\r\n\toptions include:\r\n\t--schema=name   use name as schema, and strip table name if needed\r\n\t--role=name     use name as role for database transaction\r\n\t--key=a:b:c     create a primary key using columns named a, b, c.\r\n\t--unique=a:b:c  create a unique index using columns named a, b, c.\r\n\t--append        skips table creation and truncation, inserts only\r\n\t--cascade       drops tables with cascades\r\n\t--sniff=N       limit field type detection to N rows (default: 1000)\r\n\t--utf8          force client encoding to UTF8\r\n\t--datatype=name[,name]:type \r\n\t\t\tsets the data type for field NAME to TYPE\r\n\r\n\tenvironment variables:\r\n\tCSV2PSQL_SCHEMA      default value for --schema\r\n\tCSV2PSQL_ROLE        default value for --role\r\n\r\n\r\n\tWritten by Darren Hardy <hardy@nceas.ucsb.edu>\r\n","tagline":"Converts a CSV file into a PostgreSQL table","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}